// This is your Prisma schema file
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  email    String  @unique
  password String
  
  orders   Order[]
  cart     Cart?
  address  Address?
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Float
  imageUrl    String
  rating      Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  cartItems   CartItem[]
  orderItems  OrderItem[]
}

model Address {
  id           String  @id @default(uuid())
  user         User    @relation(fields: [userId], references: [id])
  userId       String  @unique
  addressLine1 String
  addressLine2 String?
  city         String
  state        String
  zipCode      String
  country      String
}

model Cart {
  id        String     @id @default(uuid())
  user      User       @relation(fields: [userId], references: [id])
  userId    String     @unique
  items     CartItem[]
}

model CartItem {
  id        String   @id @default(uuid())
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
}

model Order {
  id         String      @id @default(uuid())
  user       User        @relation(fields: [userId], references: [id])
  userId     String
  items      OrderItem[]
  total      Float
  status     String      @default("PENDING")
  createdAt  DateTime    @default(now())
  payment    Payment?
}

model OrderItem {
  id        String   @id @default(uuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  subtotal  Float
}

model Payment {
  id         String   @id @default(uuid())
  order      Order    @relation(fields: [orderId], references: [id])
  orderId    String   @unique
  method     String
  status     String   @default("PENDING")
  createdAt  DateTime @default(now())
}